/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode* root,int targetsum,int sum,vector<int> path,bool &ans)
    {

     if(root==NULL)
     return ;
     if(root->left==NULL&&root->right==NULL)
     {
         path.push_back(root->val);
         sum=sum+root->val;
         if(sum==targetsum)
         {
             ans=true;
         }
         return ;
     }  
     path.push_back(root->val);
     sum=sum+root->val;
     solve(root->left,targetsum,sum,path,ans);
     solve(root->right,targetsum,sum,path,ans);

    }
    bool hasPathSum(TreeNode* root, int targetSum) {
        bool ans=false;
        int sum=0;
        vector<int> path;
        solve(root,targetSum,sum,path,ans);
        return ans;
    }
};
