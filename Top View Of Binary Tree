class Solution
{
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    vector<int> topView(Node *root)
    {
         map<int,int> topnode;
         vector<int> ans;
    queue< pair<Node*,int> > q;
    q.push(make_pair(root,0));
    while(!q.empty())
    {
        pair<Node*,int> temp;
        temp=q.front();
        q.pop();
        Node* front=temp.first;
        int hd=temp.second;
        if(topnode.find(hd)==topnode.end())
        {
            topnode[hd]=front->data;
        }
        if(front->left)
        {
            q.push(make_pair(front->left,hd-1));
        }
        if(front->right)
        {
            q.push(make_pair(front->right,hd+1));
        }
    }
    for(auto i:topnode)
    {
        ans.push_back(i.second);
    }
    return ans;
    }

};
