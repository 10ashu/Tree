class Solution {
  public:
    vector <int> bottomView(Node *root) {
           queue< pair<Node*,int> > q;
    q.push(make_pair(root,0));
    vector<int> ans;
    map<int,int> bottomnode;
    while(!q.empty())
    {
        pair<Node*,int> temp;
        temp=q.front();
        q.pop();
        Node* front=temp.first;
        int hd=temp.second;
          bottomnode[hd]=front->data;
          if(front->left)
          q.push(make_pair(front->left,hd-1));
          if(front->right)
          q.push(make_pair(front->right,hd+1));
    }
    for(auto i:bottomnode)
    {
        ans.push_back(i.second);
    }
    return ans;
    }
};
